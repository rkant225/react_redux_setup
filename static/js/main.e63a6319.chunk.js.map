{"version":3,"sources":["Components/ReduxTollKitComponents/LoaderReduxToolkit/LoaderReduxToolkit.js","ReduxToolkit/Slices/activeCustomersSlice.js","Components/ReduxTollKitComponents/FoodCourt/ActiveCustomer/ActiveCustomer.js","ReduxToolkit/Slices/reservationSlice.js","Components/ReduxTollKitComponents/FoodCourt/Reservation/Reservation.js","Components/ReduxTollKitComponents/FoodCourt/FoodCourt.js","ReduxToolkit/Slices/loaderSlice.js","ReduxToolkit/Slices/toasterSlice.js","ReduxToolkit/Slices/usersSlice.js","Components/ReduxTollKitComponents/RandomUser/RandomUser.js","Components/ReduxTollKitComponents/ToastSnackBar/ToastSnackBar.js","AppReduxToolkit.js","ReduxToolkit/store.js","index.js"],"names":["LoaderReduxToolkit","isLoading","useSelector","state","loaderModel","style","top","bottom","right","left","display","justifyContent","alignItems","position","backgroundColor","color","overflow","initialState","activeCustomers","reservationId","customerName","reservationDate","memberCount","foodOrders","orderId","Math","random","name","price","ceil","activeCustomersSlice","createSlice","reducers","addActiveCustomer","action","push","payload","deleteActiveCustomer","filteredActiveCustomersList","filter","activeCustomer","addFoodOrder","orderData","finalActiveCustomersList","forEach","deleteFoodOrder","filteredFoodOrders","foodOrder","actions","ActiveCustomer","dispatch","useDispatch","height","borderRadius","padding","map","marginBottom","fontWeight","cursor","onClick","reduce","acc","index","completeArray","flexWrap","width","margin","id","onSubmit","e","preventDefault","formElement","document","getElementById","food","FormData","get","Date","now","reset","handleAddFoodFormSubmission","textAlign","marginTop","required","type","value","reservationSlice","reservations","addReservation","deleteReservation","filteredReservationsList","reservation","Reservation","deleteCustomerReservation","reservationData","toDateString","FoodCourt","borderRight","loaderSlice","startLoading","stopLoading","isError","message","changeId","toasterSlice","updateToaster","fetchRandomUsers","createAsyncThunk","nUsers","thunkAPI","a","URL","axios","response","console","log","data","results","usersSlice","users","extraReducers","pending","fulfilled","rejected","RandomUser","useState","userCount","setUserCount","user","src","picture","large","alt","email","ToastSnackBar","toasterModel","useEffect","toast","dismiss","error","success","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","limit","AppReduxToolkit","store","configureStore","reducer","reservationReducer","activeCustomersReducer","usersReducer","loaderReducer","toasterReducer","ReactDOM","render"],"mappings":"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","file":"static/js/main.e63a6319.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst LoaderReduxToolkit = () => {\r\n\r\n    const isLoading = useSelector((state)=>state.loaderModel.isLoading)\r\n\r\n    return (\r\n        <>\r\n            {isLoading &&\r\n                <div style={{top : '0', bottom : '0', right : '0', left : '0', display : 'flex', justifyContent : 'center', alignItems : 'center', position : 'fixed', backgroundColor : 'rgba(50,50,50,.8)', color : 'white', overflow : 'hidden'}}>\r\n                    Loading...\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default LoaderReduxToolkit;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    activeCustomers : [{\r\n        reservationId : 1635389718481,\r\n        customerName: \"Abhinav Singh\",\r\n        reservationDate: \"Thu Oct 28 2021\",\r\n        memberCount: 2,\r\n        foodOrders : [{orderId : Math.random(), name : 'Rice', price : Math.ceil(Math.random() * 100)}, {orderId : Math.random(), name : 'Chicken Curry', price : Math.ceil(Math.random() * 100)}]\r\n    }]\r\n}\r\n\r\nconst activeCustomersSlice = createSlice({\r\n    name : 'activeCustomers',\r\n    initialState : initialState,\r\n    reducers : {\r\n        addActiveCustomer : (state, action)=>{\r\n            state.activeCustomers.push({...action.payload, foodOrders : []});\r\n        },\r\n        deleteActiveCustomer : (state, action)=>{\r\n            const filteredActiveCustomersList = state.activeCustomers.filter((activeCustomer)=>activeCustomer.reservationId !== action.payload)\r\n            state.activeCustomers = filteredActiveCustomersList;\r\n        },\r\n        addFoodOrder : (state, action)=>{\r\n            const {reservationId, orderData} = action.payload;\r\n\r\n            let finalActiveCustomersList = [];\r\n\r\n            state.activeCustomers.forEach((activeCustomer)=>{\r\n                if(activeCustomer.reservationId === reservationId){\r\n                    activeCustomer.foodOrders = [...activeCustomer.foodOrders, orderData];\r\n                }\r\n                finalActiveCustomersList.push(activeCustomer);\r\n            });\r\n            state.activeCustomers = finalActiveCustomersList;\r\n\r\n        },\r\n        deleteFoodOrder : (state, action)=>{\r\n            const {reservationId, orderId} = action.payload;\r\n\r\n            let finalActiveCustomersList = [];\r\n\r\n            state.activeCustomers.forEach((activeCustomer)=>{\r\n                if(activeCustomer.reservationId === reservationId){\r\n                    const filteredFoodOrders = activeCustomer.foodOrders.filter((foodOrder)=>foodOrder.orderId !== orderId);\r\n                    activeCustomer.foodOrders = filteredFoodOrders;\r\n                }\r\n\r\n                finalActiveCustomersList.push(activeCustomer);\r\n            });\r\n\r\n            state.activeCustomers = finalActiveCustomersList;\r\n        },\r\n\r\n    }\r\n});\r\n\r\n\r\n//Action Creators\r\nexport const {addActiveCustomer, deleteActiveCustomer, addFoodOrder, deleteFoodOrder} = activeCustomersSlice.actions;\r\n\r\n// Reducer\r\nexport default activeCustomersSlice.reducer;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {deleteActiveCustomer, addFoodOrder, deleteFoodOrder} from '../../../../ReduxToolkit/Slices/activeCustomersSlice';\r\n\r\nconst ActiveCustomer = () => {\r\n    const dispatch = useDispatch();\r\n    const activeCustomers = useSelector((state)=>state.activeCustomers.activeCustomers);\r\n\r\n\r\n    const handleAddFoodFormSubmission = (e, reservationId)=>{\r\n        e.preventDefault();\r\n        const formElement = document.getElementById(`add-order-form-${reservationId}`);\r\n        const formData = new FormData(formElement);\r\n        const food = formData.get('food');\r\n        const orderData = {orderId : Date.now(), name : food, price : Math.ceil(Math.random() * 100)}\r\n        dispatch(addFoodOrder({reservationId, orderData}))\r\n        formElement.reset();\r\n    }\r\n\r\n    const markReservationCompletedAndDelete = (reservationId)=>{\r\n        dispatch(deleteActiveCustomer(reservationId));\r\n    }\r\n\r\n    const deleteFoodFromOrder = (reservationId, orderId)=>{\r\n        dispatch(deleteFoodOrder({reservationId, orderId}));\r\n    }\r\n\r\n    const getOrderTotal = (foodOrders)=>{\r\n        return foodOrders.reduce((acc,foodOrder,index, completeArray)=>{\r\n            return acc + foodOrder.price;\r\n        },0)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{backgroundColor : 'black', height : '500px', borderRadius : '.5rem', padding : '.5rem', overflow : 'auto'}}>\r\n\r\n\r\n                {activeCustomers.map((activeCustomer)=>{\r\n                    let ordetTotal = 0;\r\n                    return(\r\n                        <div key={activeCustomer.reservationId} style={{backgroundColor : 'wheat', height : 'max-contrnt', padding : '.5rem', borderRadius : '.3rem', marginBottom : '.5rem'}}>\r\n                            <div style={{display : 'flex', justifyContent : 'space-between'}}>\r\n                                <div><span>{activeCustomer.customerName}</span></div>\r\n                                <div style={{color : 'green', fontWeight : '900', cursor : 'pointer'}} onClick={()=>{markReservationCompletedAndDelete(activeCustomer.reservationId)}}>Complete Order | ₹{getOrderTotal(activeCustomer.foodOrders)}</div>\r\n                            </div>\r\n\r\n                            <div style={{display : 'flex', justifyContent : 'space-between'}}>\r\n\r\n                                <div>\r\n                                    <div style={{display : 'flex', flexWrap : 'wrap'}}>\r\n                                        {activeCustomer.foodOrders.map((foodOrder)=>{\r\n                                            ordetTotal = ordetTotal + foodOrder.price;\r\n                                            return(\r\n                                                <div key={foodOrder.orderId} style={{backgroundColor : 'white', padding : '.2rem', width : 'max-content', borderRadius : '.3rem', margin : '.5rem', cursor : 'pointer'}} onClick={()=>{deleteFoodFromOrder(activeCustomer.reservationId, foodOrder.orderId)}}>\r\n                                                    {foodOrder.name}\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <form id={`add-order-form-${activeCustomer.reservationId}`} onSubmit={(e)=>{handleAddFoodFormSubmission(e, activeCustomer.reservationId)}}>\r\n                                        <div style={{textAlign : '-webkit-right'}}>\r\n                                            <div style={{marginTop : '.3rem', padding : '.5rem', borderRadius : '.5rem', width : 'max-content'}}>\r\n                                                <label>Order Details</label>\r\n                                                <br/>\r\n                                                <input required name=\"food\" type=\"text\"/>\r\n                                                <input type=\"submit\" value=\"Add Order\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveCustomer;\r\n\r\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    reservations : [\r\n        { \"reservationId\": 1635389718482, \"customerName\": \"Rahul\", \"reservationDate\": \"Thu Oct 28 2021\", \"memberCount\": 2 },\r\n        { \"reservationId\": 1635389718483, \"customerName\": \"Ajay\", \"reservationDate\": \"Fri Oct 29 2021\", \"memberCount\": 5 },\r\n        { \"reservationId\": 1635389718484, \"customerName\": \"Amit\", \"reservationDate\": \"Sat Oct 30 2021\", \"memberCount\": 1 },\r\n    ]\r\n}\r\n\r\nconst reservationSlice = createSlice({\r\n    name : 'reservation',\r\n    initialState : initialState,\r\n    reducers : {\r\n        addReservation : (state, action)=>{\r\n            state.reservations.push(action.payload);\r\n        },\r\n        deleteReservation : (state, action)=>{\r\n            const filteredReservationsList = state.reservations.filter((reservation)=>reservation.reservationId !== action.payload.reservationId)\r\n            state.reservations = filteredReservationsList;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n// Action Creators\r\nexport const { addReservation, deleteReservation } = reservationSlice.actions;\r\n\r\n// Reducer\r\nexport default reservationSlice.reducer;\r\n","import React, { useState } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { addReservation, deleteReservation } from '../../../../ReduxToolkit/Slices/reservationSlice';\r\nimport { addActiveCustomer } from '../../../../ReduxToolkit/Slices/activeCustomersSlice';\r\n\r\nconst Reservation = () => {\r\n    const dispatch = useDispatch();\r\n    const reservations = useSelector((state)=>state.reservations.reservations);\r\n\r\n\r\n    const deleteCustomerReservation = (reservationId)=>{\r\n        dispatch(deleteReservation({reservationId : reservationId}))\r\n    }\r\n\r\n    const moveCustomerToActiveCustomersList = (reservationData)=>{\r\n        dispatch(addActiveCustomer({...reservationData}));\r\n        deleteCustomerReservation(reservationData.reservationId);\r\n    }\r\n\r\n    const handleFormSubmit = (e)=>{\r\n        e.preventDefault();\r\n        const formElement = document.getElementById('reservation-form');\r\n        const formData = new FormData(formElement);\r\n        const customerName = formData.get('customerName');\r\n\r\n        const reservationData = {reservationId : Date.now(), customerName : customerName, reservationDate : new Date().toDateString(), memberCount : Math.ceil(Math.random() * 10)}\r\n        dispatch(addReservation(reservationData));\r\n        formElement.reset();\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{backgroundColor : 'black', padding : '.5rem', borderRadius : '.3rem', height : '366px', overflow : 'auto'}}>\r\n                {reservations.map((reservation)=>{\r\n                    return(\r\n                        <div key={reservation.reservationId} style={{backgroundColor : 'wheat', padding : '.5rem', marginBottom : '.5rem', borderRadius : '.3rem'}}>\r\n\r\n                            <div style={{display : 'flex', justifyContent : 'space-between'}}>\r\n                                \r\n                                <div style={{cursor : 'pointer'}} onClick={()=>{moveCustomerToActiveCustomersList(reservation)}}><span>{reservation.customerName}</span></div>\r\n                                <div style={{cursor : 'pointer', color : 'red'}} onClick={()=>{deleteCustomerReservation(reservation.reservationId)}}>Delete</div>\r\n                            </div>\r\n                            <div style={{display : 'flex', justifyContent : 'space-between'}}>\r\n                                <div>{reservation.reservationDate}</div>\r\n                                <div>Members : {reservation.memberCount}</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            \r\n                    <div style={{height : '18%', marginTop : '.3rem', padding : '.5rem', borderRadius : '.5rem', backgroundColor : 'black', color : 'white'}}>\r\n                <form id=\"reservation-form\" onSubmit={handleFormSubmit}>\r\n                        <div>\r\n                            <label>Customer Name</label>\r\n                            <br/>\r\n                            <input required name=\"customerName\" type=\"text\"/>\r\n                        </div>\r\n                        <br/>\r\n\r\n                        <div style={{textAlign : 'right'}}>\r\n                            <input type=\"submit\" value=\"Add reservation\"/>\r\n                        </div>\r\n\r\n                </form>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reservation;\r\n","import React from 'react'\r\nimport ActiveCustomer from './ActiveCustomer/ActiveCustomer';\r\nimport Reservation from './Reservation/Reservation';\r\n\r\nconst FoodCourt = () => {\r\n    return (\r\n        <div>\r\n            <h1>Plain Actions (Non-Asynchronous)</h1>\r\n        \r\n            <div style={{display : 'flex'}}>\r\n                \r\n                <div style={{padding : '1rem', borderRight : '1px solid black', width : '30%'}}>\r\n                    <Reservation/>\r\n                </div>\r\n\r\n                <div style={{padding : '1rem', width : '70%'}}>\r\n                    <ActiveCustomer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodCourt;\r\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    isLoading : false\r\n}\r\n\r\nconst loaderSlice = createSlice({\r\n    name : 'loader',\r\n    initialState : initialState,\r\n    reducers : {\r\n        startLoading : (state)=>{\r\n            state.isLoading = true;\r\n        },\r\n        stopLoading : (state)=>{\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n// Action Creators\r\nexport const { startLoading, stopLoading } = loaderSlice.actions;\r\n\r\n// Reducer\r\nexport default loaderSlice.reducer;\r\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    isError : false,\r\n    message : \"\",\r\n    changeId : Math.random()\r\n}\r\n\r\nconst toasterSlice = createSlice({\r\n    name : 'loader',\r\n    initialState : initialState,\r\n    reducers : {\r\n        updateToaster : (state, action)=>{\r\n            const {isError, message} = action.payload;\r\n            state.isError = isError;\r\n            state.message = message;\r\n            state.changeId = Math.random();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n// Action Creators\r\nexport const { updateToaster } = toasterSlice.actions;\r\n\r\n// Reducer\r\nexport default toasterSlice.reducer;\r\n","//\r\n\r\nimport {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport {startLoading, stopLoading} from './loaderSlice';\r\nimport {updateToaster} from './toasterSlice';\r\n\r\nconst initialState = {\r\n    users : []\r\n}\r\n\r\n\r\nexport const fetchRandomUsers = createAsyncThunk(\r\n    'users/fetchRandomUsers', \r\n    async (nUsers, thunkAPI)=>{\r\n        thunkAPI.dispatch(startLoading());\r\n        try{\r\n            if(nUsers > 0){\r\n\r\n                const URL = `https://randomuser.me/api/?results=${nUsers || 1}`\r\n    \r\n                const response = await axios.get(URL);\r\n                console.log('response', response)\r\n                thunkAPI.dispatch(stopLoading());\r\n                thunkAPI.dispatch(updateToaster({isError : false, message : \"Data fetched successfully.\"}));\r\n                \r\n                return response?.data?.results || [];\r\n            } else {\r\n                thunkAPI.dispatch(updateToaster({isError : true, message : \"Number of users must be greater than 0.\"}));\r\n                thunkAPI.dispatch(stopLoading());\r\n            }\r\n        } catch(e){\r\n            console.log(e);\r\n            thunkAPI.dispatch(stopLoading());\r\n            thunkAPI.dispatch(updateToaster({isError : true, message : \"Something went wrong please try again.\"}));\r\n        }\r\n        \r\n    }\r\n);\r\n\r\n\r\nconst usersSlice = createSlice({\r\n    name : 'users',\r\n    initialState : initialState,\r\n    reducers : {\r\n\r\n    },\r\n    extraReducers : {\r\n        [fetchRandomUsers.pending] : (state, action)=>{\r\n            \r\n        },\r\n        [fetchRandomUsers.fulfilled] : (state, action)=>{\r\n            state.users = action.payload;\r\n        },\r\n        [fetchRandomUsers.rejected] : (state, action)=>{\r\n            \r\n        },\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport default usersSlice.reducer;","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {fetchRandomUsers} from '../../../ReduxToolkit/Slices/usersSlice';\r\n\r\nconst RandomUser = () => {\r\n    const dispatch = useDispatch();\r\n    const users = useSelector((state)=>state.users.users);\r\n\r\n    const [userCount, setUserCount] = useState(5);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Thunk Actions (Asynchronous)</h1>\r\n            <div style={{textAlign : 'center'}}>\r\n                <button onClick={()=>{setUserCount(userCount - 1)}}>-</button>\r\n                <button onClick={()=>{dispatch(fetchRandomUsers(userCount))}}>Fetch {userCount} User</button>\r\n                <button onClick={()=>{setUserCount(userCount + 1)}}>+</button>\r\n            </div>\r\n            <div style={{display : 'flex', flexWrap : 'wrap'}}>\r\n                {users?.map((user)=>{\r\n                    return(\r\n                        <img key={user.email} src={user.picture.large} alt={user.email} style={{height : '200px', width : '200px', margin : '.5rem', borderRadius : '50%'}}/>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomUser;\r\n","import 'react-toastify/dist/ReactToastify.css';\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { toast } from 'react-toastify';\r\nimport {updateToaster} from '../../../ReduxToolkit/Slices/toasterSlice';\r\n\r\nconst ToastSnackBar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const toasterModel = useSelector((state)=>state.toasterModel);\r\n    const {changeId, isError, message} = toasterModel;\r\n    console.log('DATA', isError, message)\r\n\r\n    useEffect(()=>{\r\n        toast.dismiss();\r\n\r\n        if(message){\r\n            if(isError){\r\n                toast.error(message);\r\n            } else {\r\n                toast.success(message);\r\n            }\r\n        }\r\n    }, [isError, message, changeId]);\r\n\r\n    return (\r\n        <div>\r\n            {/* <button onClick={()=>{dispatch(updateToaster({isError : false, message : 'Ok'}))}}>success</button> */}\r\n            {/* <button onClick={()=>{dispatch(updateToaster({isError : true, message : 'Failed'}))}}>Error</button> */}\r\n        <ToastContainer\r\n            position=\"bottom-left\"\r\n            autoClose={1200}\r\n            hideProgressBar\r\n            newestOnTop={false}\r\n            closeOnClick={false}\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable={false}\r\n            pauseOnHover\r\n            limit={1}\r\n        />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToastSnackBar;\r\n","import './App.css';\nimport LoaderReduxToolkit from './Components/ReduxTollKitComponents/LoaderReduxToolkit/LoaderReduxToolkit';\nimport FoodCourt from './Components/ReduxTollKitComponents/FoodCourt/FoodCourt';\nimport RandomUser from './Components/ReduxTollKitComponents/RandomUser/RandomUser';\nimport ToastSnackBar from './Components/ReduxTollKitComponents/ToastSnackBar/ToastSnackBar';\n\nfunction AppReduxToolkit() {\n  return (\n    <div>\n      <ToastSnackBar/>\n      <LoaderReduxToolkit/>\n      <FoodCourt/>\n      <RandomUser/>\n    </div>\n  );\n}\n\nexport default AppReduxToolkit;\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport reservationReducer from './Slices/reservationSlice';\r\nimport activeCustomersReducer from './Slices/activeCustomersSlice';\r\nimport usersReducer from './Slices/usersSlice';\r\nimport loaderReducer from './Slices/loaderSlice';\r\nimport toasterReducer from './Slices/toasterSlice';\r\n\r\nconst store = configureStore({\r\n    reducer : {\r\n        reservations : reservationReducer,\r\n        activeCustomers : activeCustomersReducer,\r\n        users : usersReducer,\r\n        loaderModel : loaderReducer,\r\n        toasterModel : toasterReducer\r\n    }\r\n});\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import AppPlainRedux from \"./AppPlainRedux\";\nimport AppReduxToolkit from \"./AppReduxToolkit\";\nimport { Provider } from \"react-redux\";\n\n// import store from \"./Redux/store\"; // store from plain react-redux\nimport store from \"./ReduxToolkit/store\"; // store from redux toolkit\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <AppPlainRedux /> */}\n    <AppReduxToolkit/>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}